import React, { useState } from 'react';
import { createUserWithEmailAndPassword } from 'firebase/auth';
import { auth, db } from '../../firebase';
import { doc, setDoc } from 'firebase/firestore';
import { useNavigate } from 'react-router-dom';
import './AuthForm.css';

const Register = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const navigate = useNavigate();

  const handleRegister = async (e) => {
    e.preventDefault();

    try {
      // –ö—Ä–æ–∫ 1: —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      const userCredential = await createUserWithEmailAndPassword(auth, email, password);
      const user = userCredential.user;

      console.log('üëâ UID:', user.uid);
      console.log('üëâ Email:', user.email);

      // –ö—Ä–æ–∫ 2: –∑–∞–ø–∏—Å —É Firestore
      await setDoc(doc(db, 'users', user.uid), {
        email: user.email || email, // fallback –Ω–∞ –≤–∏–ø–∞–¥–æ–∫ –∑–∞—Ç—Ä–∏–º–∫–∏
        role: 'employee',
      });

      alert('‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!');
      navigate('/login');
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó:', error);
      alert('–ü–æ–º–∏–ª–∫–∞: ' + error.message);
    }
  };

  return (
    <form onSubmit={handleRegister} className="auth-form-container">
      <h2>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è</h2>
      <input
        type="email"
        placeholder="Email"
        value={email}
        onChange={(e) => setEmail(e.target.value)}
        required
      />
      <input
        type="password"
        placeholder="–ü–∞—Ä–æ–ª—å"
        value={password}
        onChange={(e) => setPassword(e.target.value)}
        required
      />
      <button type="submit">–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è</button>
      <p>
        –í–∂–µ –º–∞—î—Ç–µ –∞–∫–∞—É–Ω—Ç? <a href="/login">–£–≤—ñ–π—Ç–∏</a>
      </p>
    </form>
  );
};

export default Register;
